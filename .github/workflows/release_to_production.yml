name: Release production if a release PR merged

on:
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  check-if-new-version-should-be-released:
    name: Check if should relese new production version
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      shouldRelease: ${{ steps.init.outputs.shouldRelease }}
      version: ${{ steps.init.outputs.version }}
    steps:
      - id: init
        run: |
          branch_name=${{ github.event.pull_request.head.ref }}
          echo "::set-output name=shouldRelease::false"   
          if [[ "$branch_name" =~ ^release-* ]]; then
            version=$(echo '${{ github.event.pull_request.head.ref }}' | cut -c 9-)
            echo "::set-output name=shouldRelease::true"
            echo "::set-output name=version::$version"
          fi

  release-new-version:
    name: Releases a new production version of the service
    runs-on: ubuntu-latest
    needs: [ check-if-new-version-should-be-released ]
    if: needs.check-if-new-version-should-be-released.outputs.shouldRelease == 'true'
    steps:
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.check-if-new-version-should-be-released.outputs.version }}
          name: Release ${{ needs.check-if-new-version-should-be-released.outputs.version }}
          generateReleaseNotes: true
      - uses: actions/checkout@v3
      - name: Release on crates.io
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
